/**
 * ManageSpace Orgs API
 * ManageSpace Orgs API Documentation
 *
 * The version of the OpenAPI document: 0.0.11-dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Condition } from './condition';
import { Position } from './position';
import { UnitFeature } from './unitFeature';

export class UpdateUnitRequest {
    /**
    * Unit Name
    */
    'unitName': string;
    /**
    * Unit Description
    */
    'unitDescription': string | null;
    /**
    * Unit Type ID
    */
    'unitTypeId': number;
    /**
    * Length
    */
    'length': number;
    /**
    * Width
    */
    'width': number;
    /**
    * Height
    */
    'height': number | null;
    /**
    * Size
    */
    'size': number | null;
    /**
    * Metric
    */
    'metricId': number;
    /**
    * Standard Price
    */
    'standardPrice': number | null;
    /**
    * Tax
    */
    'tax': number | null;
    /**
    * Security Deposit
    */
    'unitSecurityDeposit': number | null;
    /**
    * Walk through order
    */
    'walkThroughOrder': number | null;
    /**
    * Currency
    */
    'currencyId': number | null;
    /**
    * Floor
    */
    'floor': number | null;
    /**
    * Notes
    */
    'notes': string | null;
    'position': Position;
    /**
    * Unit Features
    */
    'unitFeatures': Array<UnitFeature>;
    /**
    * Unit Conditions
    */
    'conditions': Array<Condition>;
    /**
    * The Unit ID
    */
    'unitId'?: string;
    /**
    * The Organization ID
    */
    'orgId'?: string;
    /**
    * The site ID
    */
    'siteId'?: string;
    /**
    * Location ID
    */
    'locationId': string;
    /**
    * Status
    */
    'statusId'?: number;
    /**
    * The dimensions of the unit
    */
    'dimensions'?: string;
    /**
    * Created Date
    */
    'createdAt'?: Date;
    /**
    * Updated Date
    */
    'updatedAt'?: Date | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "unitName",
            "baseName": "unitName",
            "type": "string"
        },
        {
            "name": "unitDescription",
            "baseName": "unitDescription",
            "type": "string"
        },
        {
            "name": "unitTypeId",
            "baseName": "unitTypeId",
            "type": "number"
        },
        {
            "name": "length",
            "baseName": "length",
            "type": "number"
        },
        {
            "name": "width",
            "baseName": "width",
            "type": "number"
        },
        {
            "name": "height",
            "baseName": "height",
            "type": "number"
        },
        {
            "name": "size",
            "baseName": "size",
            "type": "number"
        },
        {
            "name": "metricId",
            "baseName": "metricId",
            "type": "number"
        },
        {
            "name": "standardPrice",
            "baseName": "standardPrice",
            "type": "number"
        },
        {
            "name": "tax",
            "baseName": "tax",
            "type": "number"
        },
        {
            "name": "unitSecurityDeposit",
            "baseName": "unitSecurityDeposit",
            "type": "number"
        },
        {
            "name": "walkThroughOrder",
            "baseName": "walkThroughOrder",
            "type": "number"
        },
        {
            "name": "currencyId",
            "baseName": "currencyId",
            "type": "number"
        },
        {
            "name": "floor",
            "baseName": "floor",
            "type": "number"
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string"
        },
        {
            "name": "position",
            "baseName": "position",
            "type": "Position"
        },
        {
            "name": "unitFeatures",
            "baseName": "unitFeatures",
            "type": "Array<UnitFeature>"
        },
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "Array<Condition>"
        },
        {
            "name": "unitId",
            "baseName": "unitId",
            "type": "string"
        },
        {
            "name": "orgId",
            "baseName": "orgId",
            "type": "string"
        },
        {
            "name": "siteId",
            "baseName": "siteId",
            "type": "string"
        },
        {
            "name": "locationId",
            "baseName": "locationId",
            "type": "string"
        },
        {
            "name": "statusId",
            "baseName": "statusId",
            "type": "number"
        },
        {
            "name": "dimensions",
            "baseName": "dimensions",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return UpdateUnitRequest.attributeTypeMap;
    }
}

